{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[tool]
[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
readme = "README.md"
{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
{%- if cookiecutter.open_source_license in license_classifiers %}
    '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
    'Natural Language :: English',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "{{ cookiecutter.pkg_name }}" },
    { include = "tests", format = "sdist" },
]


{% if cookiecutter.command_line_interface|lower == 'y' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = '{{ cookiecutter.pkg_name }}.cli:main'


{% endif -%}


[tool.poetry.dependencies]
python = "^3.10"
{%- if cookiecutter.command_line_interface|lower == 'y' %}

#typer = "*"
#colorama = "*"
#shellingham = "*"
typer = {version = "*", extras = ["all"]}
{%- else %}

{%- endif %}
#bump2version = {version = "^1.0.1", optional = true}
#tox  = { version = "^3.20.1", optional = true}


[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
mypy = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
coverage = "*"
{%- if cookiecutter.install_precommit_hooks|lower == 'y' %}
pre-commit = "*"
{%- endif %}
mkdocs = "*"
mkdocs-autorefs = "*"
mkdocs-material = "*"
mkdocs-material-extensions = "*"
mkdocs-include-markdown-plugin = "*"
mkdocstrings = "*"


#[tool.poetry.extras]
#dev = [
#    "tox",
#    "pre-commit",
#    "bump2version"
#]


[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
# you can skip files as below
#skip_glob = ["docs/conf.py"]

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = "88"

[tool.mypy]
strict = true
strict_equality = false
pretty = true
show_error_codes = true
ignore_missing_imports = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | {{cookiecutter.project_slug}}
)/
'''


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
